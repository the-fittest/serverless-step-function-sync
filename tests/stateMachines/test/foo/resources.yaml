---
Resources:
  FooStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: /aws/vendedlogs/states/fooStateMachine${opt:stage, 'dev'}

  FooStateMachineExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogsDeliveryFullAccessPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogDelivery
                  - logs:DeleteLogDelivery
                  - logs:DescribeLogGroups
                  - logs:DescribeResourcePolicies
                  - logs:GetLogDelivery
                  - logs:ListLogDeliveries
                  - logs:PutResourcePolicy
                  - logs:UpdateLogDelivery
                Resource:
                  - "*"
        - PolicyName: XRayAccessPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                  - xray:PutTelemetryRecords
                  - xray:PutTraceSegments
                Resource:
                  - "*"
        - PolicyName: LambdaAccessPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt DummyLambdaFunction.Arn
        - PolicyName: StepFunctionAccessPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - states:StartExecution
                  - states:DescribeExecution
                  - states:StopExecution
                Resource:
                  - !Ref StepMachineOne
